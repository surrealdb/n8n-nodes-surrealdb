name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint (Node.js ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20, 22, 24]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check linting
        run: npm run lint

  format:
    name: Format (Node.js ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20, 22, 24]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check formatting
        run: npx prettier --check src

  security:
    name: Audit (Node.js ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20, 22, 24]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --omit dev

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Verify build output
        run: |
          if [ ! -d "dist" ]; then
            echo "Build failed: dist directory not found"
            exit 1
          fi
          if [ ! -f "dist/index.js" ]; then
            echo "Build failed: dist/index.js not found"
            exit 1
          fi
          echo "Build verification passed"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/
          retention-days: 7

  validate:
    name: Validate build artifacts
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist/

      - name: Test n8n node structure
        run: |
          echo "Validating n8n node structure..."
          
          # Check if main entry point exists
          if [ ! -f "dist/index.js" ]; then
            echo "❌ dist/index.js not found"
            exit 1
          fi
          
          # Check if credentials exist
          if [ ! -f "dist/credentials/SurrealDbApi.credentials.js" ]; then
            echo "❌ dist/credentials/SurrealDbApi.credentials.js not found"
            exit 1
          fi
          
          # Check if node exists
          if [ ! -f "dist/nodes/SurrealDb/SurrealDb.node.js" ]; then
            echo "❌ dist/nodes/SurrealDb/SurrealDb.node.js not found"
            exit 1
          fi
          
          # Check if package.json is valid for n8n
          if ! node -e "
            const pkg = require('./package.json');
            if (!pkg.n8n) {
              console.error('❌ package.json missing n8n configuration');
              process.exit(1);
            }
            if (!pkg.n8n.credentials || !pkg.n8n.nodes) {
              console.error('❌ package.json n8n configuration incomplete');
              process.exit(1);
            }
            console.log('✅ package.json n8n configuration is valid');
          "; then
            exit 1
          fi
          
          echo "✅ All n8n node structure validations passed"

      - name: Test n8n node loading
        run: |
          echo "Testing node loading..."
          
          # Create a simple test script
          cat > test-load.js << 'EOF'
          try {
            // Test if the main module can be loaded
            const mainModule = require('./dist/index.js');
            console.log('✅ Main module loaded successfully');
            // Test if credentials can be loaded
            const credentials = require('./dist/credentials/SurrealDbApi.credentials.js');
            console.log('✅ Credentials module loaded successfully');
            // Test if node can be loaded
            const node = require('./dist/nodes/SurrealDb/SurrealDb.node.js');
            console.log('✅ Node module loaded successfully');
            // Everything loaded successfully
            console.log('✅ All modules loaded successfully');
          } catch (error) {
            console.error('❌ Module loading failed:', error.message);
            process.exit(1);
          }
          EOF
          
          node test-load.js 